<?php

function dd5_spell_manager_menu() {
  $items = array();

  $items['spell-manager'] = array(
    'title' => t('Spell manager'),
    'page callback' => 'dd5_spell_manager_page',
    'access arguments' => array('access content'),
    'type' => MENU_SUGGESTED_ITEM,
  );


  $items['spell-manager/spell-prepared/%node/%'] = array(
    'title' => t('Toggle spell prepared'),
    'page callback' => 'toggle_spell_prepared',
    'page arguments' => array(2, 3),
    'access arguments' => array('access content'),
    'type' => MENU_CALLBACK,
  );

  $items['spell-manager/spell-cast/%node/%/%/%'] = array(
    'title' => t('Toggle spell prepared'),
    'page callback' => 'toggle_spell_cast',
    'page arguments' => array(2, 3, 4, 5),
    'access arguments' => array('access content'),
    'type' => MENU_CALLBACK,
  );

  return $items;
}

function dd5_spell_manager_page() {
  global $user;
  $user = user_load($user->uid);
  $user_spell_data = isset($user->field_spell_data[LANGUAGE_NONE][0]['value'])? unserialize($user->field_spell_data[LANGUAGE_NONE][0]['value']) : user_spell_data_default();

  // Add JS
  drupal_add_js(drupal_get_path('module', 'dd5_spell_manager') . '/js/spell-manager.js');

  // Initiate variables needed.
  $build = array();
  $user_spells = array();

  foreach ($user->field_spell_groups[LANGUAGE_NONE] as $i => $target_group) {
    $spell_group = node_load($target_group['target_id']);

    foreach ($spell_group->field_spells[LANGUAGE_NONE] as $j => $target_spell) {
      $spell = node_load($target_spell['target_id']);
      $spell->spell_group_title = $spell_group->title;
      $user_spells[] = $spell;
    }
  }

  $build['spell_table'] = array(
    '#theme' => 'table',
    '#header' => array(
      array('data' => 'Prepared', 'style' => 'width: 1px'),
      array('data' => 'Spell group', 'style' => 'width: 1px'),
      'Spell',
      array('data' => 'SP Lvl', 'style' => 'width: 1px'),
      array('data' => '0', 'style' => 'width: 1px'),
      array('data' => '1', 'style' => 'width: 1px'),
      array('data' => '2', 'style' => 'width: 1px'),
      array('data' => '3', 'style' => 'width: 1px'),
      array('data' => '4', 'style' => 'width: 1px'),
      array('data' => '5', 'style' => 'width: 1px'),
      array('data' => '6', 'style' => 'width: 1px'),
      array('data' => '7', 'style' => 'width: 1px'),
      array('data' => '8', 'style' => 'width: 1px'),
      array('data' => '9', 'style' => 'width: 1px'),
    ),
    '#rows' => array(),
  );

  foreach ($user_spells as $spell) {
    $row = array();

    // Prepared checkbox.
    $prepared = array(
      'data' => array(
        '#theme' => 'checkbox',
        '#attributes' => array(
          'class' => array('spell-prepared-toggle'),
          'data-spell-id' => $spell->nid,
        ),
      ),
    );

    if (in_array($spell->nid, $user_spell_data['prepared'])) {
      $prepared['data']['#attributes']['checked'] = 'checked';
    }

    $row[] = $prepared;

    // Title
    $row[] = $spell->spell_group_title;

    // Add collapsable fieldset library.
    drupal_add_library('system', 'drupal.collapse');

    // Get description field value
    $description = field_view_field('node', $spell, 'field_spell_description', array('label' => 'hidden'));

    $description_fieldset = array(
      '#theme' => 'fieldset',
      '#title' => 'Description',
      '#collapsible' => TRUE,
      '#collapsed' => TRUE,
      '#value' => render($description),
      '#attributes' => array(
        'class' => array('collapsible', 'collapsed'),
      ),
    );

    // Get higher level field value
    if (field_get_items('node', $spell, 'field_spell_higher_level_effects')) {
      $higher_lvl = field_view_field('node', $spell, 'field_spell_higher_level_effects', array('label' => 'hidden'));

      $higher_lvl_fieldset = array(
        '#theme' => 'fieldset',
        '#title' => 'Higher lvl effects',
        '#collapsible' => TRUE,
        '#collapsed' => TRUE,
        '#value' => render($higher_lvl),
        '#attributes' => array(
          'class' => array('collapsible', 'collapsed'),
        ),
      );
    }
    else {
      $higher_lvl = FALSE;
      $higher_lvl_fieldset = array();
    }

    $row[] = array('data' => '<h2>' . $spell->title . '</h2>' . render($description_fieldset) . render($higher_lvl_fieldset));

    $spell_lvl = $spell->field_spell_level[LANGUAGE_NONE][0]['value'];
    $row[] = $spell_lvl;

    // Total counts
    $counts = array(
      0 => 5,
      1 => 4,
      2 => 3,
      3 => 3,
      4 => 3,
      5 => 3,
      6 => 2,
      7 => 2,
      8 => 1,
      9 => 1,
    );
    for ($i=0; $i<=9; $i++) {
      $checkboxes = array();

      if(($spell_lvl == 0 && $i == 0) || ($spell_lvl > 0 && $i >= $spell_lvl)) {
        for ($j=0; $j<=$counts[$i]; $j++) {
          $checkboxes[$j] = array(
            '#theme' => 'checkbox',
            '#attributes' => array(
              'class' => array('spell-cast-toggle'),
              'data-spell-id' => $spell->nid,
              'data-spell-slot-level' => $i,
              'data-spell-slot-level-delta' => $j,
            ),
          );

          if ($j != 0) {
            $checkboxes[$j]['#prefix'] = '<br>';
          }

          if (isset($user_spell_data['cast'][$i][$j]) && in_array($spell->nid, $user_spell_data['cast'][$i][$j])) {
            $checkboxes[$j]['#attributes']['checked'] = 'checked';
          }
        }
      }

      $row[] = array('data' => $checkboxes);
    }

    $build['spell_table']['#rows'][] = $row;
  }


  return $build;
}

function user_spell_data_default() {
  return array(
    'prepared' => array(),
    'cast' => array(),
  );
}

function toggle_spell_prepared($node, $value) {
  global $user;

  $user = user_load($user->uid);
  $user_spell_data = isset($user->field_spell_data[LANGUAGE_NONE][0]['value'])? unserialize($user->field_spell_data[LANGUAGE_NONE][0]['value']) : user_spell_data_default();

  if ($value === 'true') {
    $user_spell_data['prepared'][] = $node->nid;
    $user_spell_data['prepared'] = array_unique($user_spell_data['prepared']);
    sort($user_spell_data['prepared']);
  }
  else {
    $user_spell_data['prepared'] = array_diff($user_spell_data['prepared'], array($node->nid));
    sort($user_spell_data['prepared']);
  }
  $user->field_spell_data[LANGUAGE_NONE][0]['value'] = serialize($user_spell_data);

  user_save($user);
}

function toggle_spell_cast($node, $lvl, $delta, $value) {
  global $user;

  $user = user_load($user->uid);
  $user_spell_data = isset($user->field_spell_data[LANGUAGE_NONE][0]['value'])? unserialize($user->field_spell_data[LANGUAGE_NONE][0]['value']) : user_spell_data_default();

  if ($value === 'true') {
    $user_spell_data['cast'][$lvl][$delta][] = $node->nid;
    $user_spell_data['cast'][$lvl][$delta] = array_unique($user_spell_data['cast'][$lvl][$delta]);
  }
  else {
    $user_spell_data['cast'][$lvl][$delta] = array_diff($user_spell_data['cast'][$lvl][$delta], array($node->nid));
  }

  $user->field_spell_data[LANGUAGE_NONE][0]['value'] = serialize($user_spell_data);

  user_save($user);
}








